kubectl patch pv/pvc-bc7315e9-273f-4381-909f-882f452daefb -p '{"spec":{"persistentVolumeReclaimPolicy":"Retain"}}'
kubectl delete pvc/prometheus-kube-prometheus-stack-prometheus-db-prometheus-kube-prometheus-stack-prometheus-0 -n monitoring
kubectl delete service/kube-prometheus-stack-kubelet -n kube-system 
kubectl patch pv/pvc-bc7315e9-273f-4381-909f-882f452daefb --type json -p='[{"op": "remove", "path": "/spec/claimRef"}]' -n monitoring

apiVersion: v1
kind: PersistentVolume
metadata:
  name: pvc-bc7315e9-273f-4381-909f-882f452daefb
  uid: 68d054fa-44a2-49c3-b965-315e9ff4cbd6
  resourceVersion: '36315'
  creationTimestamp: '2023-02-21T10:27:18Z'
  annotations:
    pv.kubernetes.io/provisioned-by: file.csi.azure.com
  finalizers:
    - kubernetes.io/pv-protection
  managedFields:
    - manager: csi-provisioner
      operation: Update
      apiVersion: v1
      time: '2023-02-21T10:27:18Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:pv.kubernetes.io/provisioned-by: {}
        f:spec:
          f:accessModes: {}
          f:capacity:
            .: {}
            f:storage: {}
          f:csi:
            .: {}
            f:driver: {}
            f:volumeAttributes:
              .: {}
              f:csi.storage.k8s.io/pv/name: {}
              f:csi.storage.k8s.io/pvc/name: {}
              f:csi.storage.k8s.io/pvc/namespace: {}
              f:secretnamespace: {}
              f:skuName: {}
              f:storage.kubernetes.io/csiProvisionerIdentity: {}
            f:volumeHandle: {}
          f:mountOptions: {}
          f:storageClassName: {}
          f:volumeMode: {}
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2023-02-21T10:27:18Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:phase: {}
      subresource: status
    - manager: kubectl-patch
      operation: Update
      apiVersion: v1
      time: '2023-02-21T10:34:38Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:spec:
          f:persistentVolumeReclaimPolicy: {}
  selfLink: /api/v1/persistentvolumes/pvc-bc7315e9-273f-4381-909f-882f452daefb
status:
  phase: Available
spec:
  capacity:
    storage: 50Gi
  csi:
    driver: file.csi.azure.com
    volumeHandle: >-
      mat-project-2110838008-flagger-aks-managed#f31307b57eebc42498195cd#pvc-bc7315e9-273f-4381-909f-882f452daefb###monitoring
    volumeAttributes:
      csi.storage.k8s.io/pv/name: pvc-bc7315e9-273f-4381-909f-882f452daefb
      csi.storage.k8s.io/pvc/name: >-
        prometheus-kube-prometheus-stack-prometheus-db-prometheus-kube-prometheus-stack-prometheus-0
      csi.storage.k8s.io/pvc/namespace: monitoring
      secretnamespace: monitoring
      skuName: Standard_LRS
      storage.kubernetes.io/csiProvisionerIdentity: 1676968573399-8081-file.csi.azure.com
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Retain
  storageClassName: azurefile
  mountOptions:
    - mfsymlinks
    - actimeo=30
    - nosharesock
  volumeMode: Filesystem
